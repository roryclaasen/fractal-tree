{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util.js","webpack:///./src/branch.js","webpack:///./src/tree.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","slice","NormalizeHSBColor","H","S","B","max","arguments","h","b","Branch","begin","end","options","level","e","TypeError","this","finished","numSegments","tStep","sketch","saturation","brightness","appearance","strokeWeight","weight","gradient","colorStart","color","tree","maxBranches","colorEND","delta","P5","Vector","sub","colorPos","stroke","lerpColor","nextT","line","x","y","left","mutate","_this$options$tree","angle","branchMultiplier","dir","newAngle","multiplier","active","Math","random","rotate","mult","newEnd","add","branch","Tree","root","makeTree","rootBranch","branches","right","_this$options","colorMode","HSB","draw","leaves","ellipse","RGB","width","innerWidth","height","innerHeight","PI","reset","make","transform","xOffset","yOffset","scale","center","background","mirror","mirrorOptions","save","myp5","saveCanvas","gui","GUI","treeOptions","addFolder","onChange","val","listen","offset","addColor","setup","createCanvas","translate","mirrorIndex","indexOf","pop","document","getElementById"],"mappings":"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","file":"app.d27955f829933157b4a4.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([9,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * Makes sure that the HSB color is withen color bounds\n *\n * @export\n * @param {number} H Hue\n * @param {number} S Saturation\n * @param {number} B Brightness\n * @param {number} [max=360] Color range\n * @returns {[number, number, number, number]} HSBA array\n */\nexport function NormalizeHSBColor(H, S, B, max = 360) {\n\tlet h = H;\n\tlet s = S;\n\tlet b = B;\n\tif (h > max) h = max;\n\tif (h < 0) h = 0;\n\tif (s > max) s = max;\n\tif (s < 0) s = 0;\n\tif (b > max) b = max;\n\tif (b < 0) b = 0;\n\treturn [h, s, b, max];\n}\n\nexport default { NormalizeHSBColor };\n","import P5 from 'p5';\n\nimport { NormalizeHSBColor } from './util';\n\n/**\n * Branches for the Tree\n *\n * @export\n * @class Branch\n */\nexport default class Branch {\n\t/**\n\t * Creates an instance of Branch.\n\t * @param {P5.Vector} begin Start Node\n\t * @param {P5.Vector} end End Node\n\t * @param {*} options\n\t * @param {number} [level=0] How far along is the Branch\n\t * @memberof Branch\n\t */\n\tconstructor(begin, end, options, level = 0) {\n\t\tthis.begin = begin;\n\t\tthis.end = end;\n\t\tthis.options = options;\n\t\tthis.level = level;\n\n\t\tthis.finished = false;\n\n\t\tthis.numSegments = 4;\n\t\tthis.tStep = 1.0 / this.numSegments;\n\t}\n\n\t/**\n\t * Draw the current branch\n\t * @param {P5} sketch\n\t * @param {number} saturation\n\t * @param {number} brightness\n\t * @memberof Branch\n\t */\n\tdraw(sketch, saturation, brightness) {\n\t\tconst { appearance } = this.options;\n\t\tsketch.strokeWeight(appearance.weight);\n\t\tif (!appearance.gradient) {\n\t\t\tsketch.stroke(NormalizeHSBColor(this.level, saturation, brightness, this.options.tree.maxBranches));\n\t\t\tsketch.line(this.begin.x, this.begin.y, this.end.x, this.end.y);\n\t\t} else {\n\t\t\tconst colorStart = sketch.color(NormalizeHSBColor(this.level, saturation, brightness, this.options.tree.maxBranches - 1));\n\t\t\tconst colorEND = sketch.color(NormalizeHSBColor(this.level + 1, saturation, brightness, this.options.tree.maxBranches - 1));\n\n\t\t\tconst delta = P5.Vector.sub(this.end, this.begin);\n\n\t\t\tfor (let i = 0, t = 0.0; i < this.numSegments; i += 1) {\n\t\t\t\tconst colorPos = i * (1 / this.numSegments);\n\t\t\t\tconst stroke = sketch.lerpColor(colorStart, colorEND, colorPos);\n\t\t\t\tsketch.stroke(stroke);\n\n\t\t\t\tconst nextT = t + this.tStep;\n\t\t\t\tsketch.line(this.begin.x + delta.x * t, this.begin.y + delta.y * t, this.begin.x + delta.x * nextT, this.begin.y + delta.y * nextT);\n\t\t\t\tt = nextT;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create child branch, left or right\n\t * @param {boolean} [left=false] Is the left most branch\n\t * @returns {Branch} New child Branch Object\n\t * @memberof Branch\n\t */\n\tbranch(left = false) {\n\t\tconst { mutate } = this.options;\n\t\tconst { angle, branchMultiplier } = this.options.tree;\n\n\t\tconst dir = P5.Vector.sub(this.end, this.begin);\n\t\tlet newAngle = angle;\n\t\tlet multiplier = branchMultiplier || 1;\n\t\tif (mutate.active) {\n\t\t\tnewAngle += Math.random() * mutate.angle;\n\t\t\tmultiplier += ((Math.random() * 2) - 1) * mutate.branchMultiplier;\n\t\t}\n\t\tnewAngle *= left ? 1 : -1;\n\t\tdir.rotate(newAngle);\n\t\tdir.mult(multiplier);\n\n\t\tconst newEnd = P5.Vector.add(this.end, dir);\n\t\tconst branch = new Branch(this.end, newEnd, this.options, this.level + 1);\n\t\treturn branch;\n\t}\n}\n","import Branch from './branch';\n/**\n * Tree, contains branches\n *\n * @export\n * @class Tree\n */\nexport default class Tree {\n\t/**\n\t * Remkate the tree from the root with the options specified\n\t *\n\t * @param {P5.Vector[]} root\n\t * @param {*} options\n\t * @memberof Tree\n\t */\n\tconstructor(root, options) {\n\t\tthis.options = options;\n\t\tthis.makeTree(root, options);\n\t}\n\n\t/**\n\t * Remkate the tree from the root with the options specified\n\t *\n\t * @param {P5.Vector[]} root\n\t * @param {*} options\n\t * @memberof Tree\n\t */\n\tmakeTree(root, options) {\n\t\tthis.options = options;\n\t\tthis.rootBranch = new Branch(root[0], root[1], options);\n\t\tthis.branches = [];\n\t\tthis.branches[0] = this.rootBranch;\n\t\tfor (let i = 1; i < options.tree.maxBranches; i += 1) {\n\t\t\tfor (let j = this.branches.length - 1; j >= 0; j -= 1) {\n\t\t\t\tconst branch = this.branches[j];\n\t\t\t\tif (!branch.finished) {\n\t\t\t\t\tlet left = true;\n\t\t\t\t\tlet right = true;\n\t\t\t\t\tif (options.mutate.active) {\n\t\t\t\t\t\tleft = Math.random() <= options.mutate.branch;\n\t\t\t\t\t\tright = Math.random() <= options.mutate.branch;\n\t\t\t\t\t}\n\t\t\t\t\tif (left) this.branches.push(branch.branch(true));\n\t\t\t\t\tif (right) this.branches.push(branch.branch(false));\n\t\t\t\t}\n\t\t\t\tthis.branches[j].finished = true;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Draw the current Tree\n\t * @param {P5} sketch\n\t * @memberof Tree\n\t */\n\tdraw(sketch) {\n\t\tconst { appearance, tree } = this.options;\n\t\tconst { maxBranches } = tree;\n\n\t\tsketch.colorMode(sketch.HSB, maxBranches);\n\n\t\tconst saturation = appearance.saturation * (maxBranches / 360);\n\t\tconst brightness = appearance.brightness * (maxBranches / 360);\n\n\t\tfor (let i = 0; i < this.branches.length; i += 1) {\n\t\t\tconst branch = this.branches[i];\n\t\t\tbranch.draw(sketch, saturation, brightness);\n\n\t\t\tif (this.options.appearance.leaves && branch.level === maxBranches - 1) {\n\t\t\t\tsketch.stroke(maxBranches, 0, maxBranches, maxBranches);\n\t\t\t\tsketch.ellipse(branch.end.x, branch.end.y, 1);\n\t\t\t}\n\t\t}\n\n\t\tsketch.colorMode(sketch.RGB, 255);\n\t}\n}\n","/* eslint-disable no-unused-vars */\n\nimport { GUI } from 'dat.gui';\nimport P5 from 'p5';\n\nimport Tree from './tree';\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nconst options = {\n\ttree: {\n\t\tlength: 200,\n\t\tmaxBranches: 10,\n\t\tangle: Math.PI / 4,\n\t\tbranchMultiplier: 0.67,\n\t\treset: () => {\n\t\t\toptions.tree.length = 200;\n\t\t\toptions.tree.maxBranches = 10;\n\t\t\toptions.tree.angle = Math.PI / 4;\n\t\t\toptions.tree.branchMultiplier = 0.67;\n\t\t\t// eslint-disable-next-line no-use-before-define\n\t\t\tmakeTree();\n\t\t}\n\t},\n\tmutate: {\n\t\tactive: false,\n\t\tbranch: 1,\n\t\tangle: 0,\n\t\tbranchMultiplier: 0,\n\t\tmake: () => {\n\t\t\t// eslint-disable-next-line no-use-before-define\n\t\t\tmakeTree();\n\t\t},\n\t\treset: () => {\n\t\t\toptions.mutate.active = false;\n\t\t\toptions.mutate.branch = 0;\n\t\t\toptions.mutate.angle = 1;\n\t\t\toptions.mutate.branchMultiplier = 0;\n\t\t}\n\t},\n\ttransform: {\n\t\txOffset: 0,\n\t\tyOffset: 0,\n\t\tscale: 1,\n\t\trotate: 0,\n\t\tcenter: () => {\n\t\t\toptions.transform.xOffset = 0;\n\t\t\toptions.transform.yOffset = height / 2;\n\t\t},\n\t\treset: () => {\n\t\t\toptions.transform.xOffset = 0;\n\t\t\toptions.transform.yOffset = 0;\n\t\t\toptions.transform.scale = 1;\n\t\t\toptions.transform.rotate = 0;\n\t\t}\n\t},\n\tappearance: {\n\t\tsaturation: 360,\n\t\tbrightness: 360,\n\t\tgradient: false,\n\t\tweight: 1,\n\t\tbackground: '#000000',\n\t\tleaves: true,\n\t\tmirror: 'off',\n\t\tmirrorOptions: ['off', 'y', 'x y'],\n\t\treset: () => {\n\t\t\toptions.appearance.saturation = 360;\n\t\t\toptions.appearance.brightness = 360;\n\t\t\toptions.appearance.gradient = false;\n\t\t\toptions.appearance.weight = 1;\n\t\t\toptions.appearance.background = '#000000';\n\t\t\toptions.appearance.leaves = true;\n\t\t\toptions.appearance.mirror = 'off';\n\t\t}\n\t},\n\tsave: () => {\n\t\t// eslint-disable-next-line no-use-before-define\n\t\tmyp5.saveCanvas('fractal_tree');\n\t}\n};\n\n/**\n * Creates the two root vectors\n * @returns {P5.Vector[]}\n */\nfunction root() {\n\tconst x = 0;\n\tconst y = 0;\n\treturn [\n\t\tnew P5.Vector(x, y),\n\t\tnew P5.Vector(x, y - options.tree.length)\n\t];\n}\n\nconst tree = new Tree(root(), options);\n\n/**\n * Force re-generate the tree\n */\nfunction makeTree() {\n\ttree.makeTree(root(), options);\n}\n\nconst gui = new GUI();\nconst treeOptions = gui.addFolder('Tree');\ntreeOptions.add(options.tree, 'length', 0, 500).onChange((val) => makeTree()).listen();\ntreeOptions.add(options.tree, 'maxBranches', 1, 20, 1).onChange((val) => makeTree()).listen();\ntreeOptions.add(options.tree, 'angle', -Math.PI, Math.PI, 0.1).onChange((val) => makeTree()).listen();\ntreeOptions.add(options.tree, 'branchMultiplier', 0.1, 2).onChange((val) => makeTree()).listen();\ntreeOptions.add(options.tree, 'reset');\n\nconst mutate = gui.addFolder('Mutate');\nmutate.add(options.mutate, 'active').onChange((val) => makeTree());\nmutate.add(options.mutate, 'branch', 0, 1, 0.05).onChange((val) => makeTree()).listen();\nmutate.add(options.mutate, 'angle', 0, Math.PI, 0.1).onChange((val) => makeTree()).listen();\nmutate.add(options.mutate, 'branchMultiplier', 0, 1, 0.05).onChange((val) => makeTree()).listen();\nmutate.add(options.mutate, 'make');\nmutate.add(options.mutate, 'reset');\n\nconst offset = gui.addFolder('Transform');\noffset.add(options.transform, 'xOffset', -width, width).listen();\noffset.add(options.transform, 'yOffset', -height, height).listen();\noffset.add(options.transform, 'scale', 0, 5, 0.01).listen();\noffset.add(options.transform, 'rotate', -Math.PI, Math.PI, 0.01).listen();\noffset.add(options.transform, 'center');\noffset.add(options.transform, 'reset');\n\nconst appearance = gui.addFolder('Appearance');\nappearance.add(options.appearance, 'saturation', 0, 360).listen();\nappearance.add(options.appearance, 'brightness', 0, 360).listen();\nappearance.add(options.appearance, 'gradient').listen();\nappearance.add(options.appearance, 'weight', 1, 15, 1).listen();\nappearance.addColor(options.appearance, 'background').listen();\nappearance.add(options.appearance, 'leaves').listen();\nappearance.add(options.appearance, 'mirror', options.appearance.mirrorOptions).listen();\nappearance.add(options.appearance, 'reset');\n\ngui.add(options, 'save');\n\n/**\n * Wrapper function for sketch\n * (also provides JS intellisense in Visual Studio Code)\n * @param {P5} sketch\n */\nfunction renderer(sketch) {\n\tsketch.setup = () => {\n\t\tsketch.createCanvas(width, height);\n\t};\n\n\tsketch.draw = () => {\n\t\tsketch.background(options.appearance.background);\n\n\t\tsketch.push();\n\t\tsketch.translate(width / 2, height);\n\t\tsketch.translate(options.transform.xOffset, -options.transform.yOffset);\n\t\tsketch.rotate(options.transform.rotate);\n\t\tsketch.scale(options.transform.scale);\n\n\t\tconst mirrorIndex = options.appearance.mirrorOptions.indexOf(options.appearance.mirror);\n\n\t\ttree.draw(sketch);\n\n\t\tif (mirrorIndex >= 1) {\n\t\t\tsketch.push();\n\t\t\tsketch.rotate(Math.PI);\n\t\t\ttree.draw(sketch);\n\t\t\tsketch.pop();\n\t\t}\n\n\t\tif (mirrorIndex === 2) {\n\t\t\tsketch.push();\n\t\t\tsketch.rotate(Math.PI / 2);\n\t\t\ttree.draw(sketch);\n\t\t\tsketch.rotate(Math.PI);\n\t\t\ttree.draw(sketch);\n\t\t\tsketch.pop();\n\t\t}\n\n\t\tsketch.pop();\n\t};\n}\n\nconst myp5 = new P5(renderer, document.getElementById('root'));\n"],"sourceRoot":""}